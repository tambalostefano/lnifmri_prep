#!/bin/bash
#
# LNiF MRI Lab Pipeline for preprocessing of
# structural and functional MRI dataset
# stefano.tambalo@unitn.it - 20200310
#
# Correct Susceptibility Induced Distortion:
# -   Fieldmap (if present)
# -   AP/PA rev. ph. encoding (if present)
# -   Nonlin. reg to T1
#
########################################################################

shopt -s extglob
Usage() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "\tFSLDIR not set!\n\n"
    printf "\tRequires:\n\t\tFSL (https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FSL)\n"
    printf "\n\n(c) stefano.tambalo@unitn.it, 2020.\n"
    printf "***************************************************\n\n"
    exit 1
}
[ "$FSLDIR" = "" ] && Usage

Start() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Process functional data (suscept. dist. correction)\n"    

}

NextStep() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Complete. Exec. Time: ${exectime}\nNow run lnifmri_prep04_filter"
    printf "\n\n***************************************************\n\n"
    exit 1
}

#Formatted configuration file with default params to run TOPUP
arg="# ##############################################################\n\
# Configuration file for AP/PA unwarping of ep2d_bold timeseries\n\
# LNIF MRI LAB @ UniTN - stefano.tambalo@unitn.it\n\
# ##############################################################\n\
# Resolution (knot-spacing) of warps in mm\n\
--warpres=6,4,1\n\
# Subsampling level (a value of 2 indicates that a 2x2x2 neighbourhood is collapsed to 1 voxel)\n\
--subsamp=1,1,1\n\
# FWHM of gaussian smoothing\n\
--fwhm=4,2,0\n\
# Maximum number of iterations\n\
--miter=5,10,20\n\
# Relative weight of regularisation\n\
--lambda=0.000015,0.0000000005,0.00000000001\n\
# If set to 1 lambda is multiplied by the crrent average squared difference\n\
--ssqlambda=1\n\
# Regularisation model\n\
--regmod=bending_energy\n\
# If set to 1 movements are estimated along with the field\n\
--estmov=1,1,0\n\
# 0=Levenberg-Marquardt, 1=Scaled Conjugate Gradient\n\
--minmet=0,0,1\n\
# Quadratic or cubic splines\n\
--splineorder=3\n\
# Precision for calculation and storage of Hessian\n\
--numprec=double\n\
# Linear or spline interpolation\n\
--interp=spline\n\
# If set to 1 the images are individually scaled to a common mean intensity\n\
--scale=1\n";

exectime=0
SECONDS=0
QCDIR=`pwd`/qc
#printf $QCDIR

Start

for SUBDIR in sub-*[0-9] ; do
	printf -v STR "${SUBDIR}_ses-01_T1w"

	#define different images/masks to load
	t1struc=$SUBDIR/$STR.anat/T1_biascorr.nii.gz
	bstruc=$SUBDIR/$STR.anat/T1_biascorr_brain.nii.gz
	wmstruc=$SUBDIR/$STR.anat/T1_wmedge.nii.gz
	csfstruc=$SUBDIR/$STR.anat/T1_csfedge.nii.gz
	brainmask=$SUBDIR/$STR.anat/T1_biascorr_brain_mask.nii.gz
	std=$FSLDIR/data/standard/MNI152_T1_2mm.nii.gz

	# #################################################################################################
	# PREPARE FIELDMAP
	shopt -s nullglob
	set -- $SUBDIR/sdc/*gre_field_mapping*e[12].nii.gz
	if [ "$#" -gt 0 ]; then
		printf "\tPreparing fielmap\n"
		runfmap=1
		#Set array to store Echo Times
		declare -a ediff

		#Process Magnitude GRE dataset
		for n in `$FSLDIR/bin/imglob $SUBDIR/sdc/*gre_field_mapping*_e[12].nii.gz` ; do
		    g=`$FSLDIR/bin/remove_ext ${n}`
		    printf "\tRunning BET on $n\n"
		    $FSLDIR/bin/bet $n ${g}_brain \
		    	-f 0.4 \
		    	-g 0.1 \
		    	-R;
		    #Erode brain-extracted image to exclude noisy voxels
		    $FSLDIR/bin/fslmaths ${g}_brain -ero ${g}_brain_eroded
			#Parse EchoTime from JSON
			etime=$(cat ${g}.json | sed 's/.*"EchoTime": \(.*\),.*/\1/;t;d')
		    ediff+=(${etime})
		done

		#Set arguments for fsl_prepare_fieldmap
		phaimg=`$FSLDIR/bin/imglob $SUBDIR/sdc/*gre_field_mapping*ph.nii.gz`

		#Consider 1st echo of magnitude image (higher SNR)
		magbrain=`$FSLDIR/bin/imglob $SUBDIR/sdc/*gre_field_mapping*e1_brain_eroded.nii.gz`
		magimg=`$FSLDIR/bin/imglob $SUBDIR/sdc/*gre_field_mapping*e1.nii.gz`
		fmap="$SUBDIR/sdc/ep2d_fmap_fieldmap"

		#Compute echo time difference
		echdif=`echo "(${ediff[1]} - ${ediff[0]})*1000" | bc -l`

		#Derive Fieldmap
		printf "\tRunning fieldmap estimation with EchoTime diff: ${echdif}\n\n"
		$FSLDIR/bin/fsl_prepare_fieldmap SIEMENS $phaimg $magbrain $fmap $echdif
	else
		runfmap=0
		printf "\n\tFieldmap not available.\n"
	fi

	#################################################################################################
	# PREPARE AP/PA FOR TOPUP
	shopt -s nullglob
	set -- $SUBDIR/sdc/*ep2d_se_distcorr*.nii.gz
	if [ "$#" -gt 0 ]; then
		printf "\n\tPreparing config file for topup\n"
		runtopup=1
		#Default parameters config-file for topup
		cnf="$SUBDIR/sdc/ep2d_topup_cfgpars.cnf"
		cnfname=`basename ${cnf} .cnf`
		#Print config-file
		printf "$arg" > ${cnf}

		printf "\tMerging opposite phase encoding SE-EPI\n\n"
		$FSLDIR/bin/fslmerge -t $SUBDIR/sdc/ep2d_topup_fieldmap `ls -d1 ./$SUBDIR/sdc/*ep2d_se_distcorr*.nii.gz`
	else
		runtopup=0
		printf "\n\tAP/PA SE data not available.\n\n"
	fi

	#################################################################################################
	# UNWARPING OF EPI
	for epiimg in `$FSLDIR/bin/imglob $SUBDIR/func/*ep2d_bold*[0-9]_+([0-9]).nii.gz` ; do

		#Load bold EPI scan
		scanname=`basename ${epiimg}`
		epiname=`$FSLDIR/bin/remove_ext ${epiimg}`
		epivol="${epiname}_SINGLEVOL"
		$FSLDIR/bin/fslroi ${epiimg} ${epivol} 30 1
		
		printf "\tScan Name: $scanname\n\tEpi Name: $epiname\n"

		#Extract core parameters from JSON
		echosp=$(cat ${epiname}.json | sed 's/.*"DerivedVendorReportedEchoSpacing": \(.*\),.*/\1/;t;d')
		phenc=$(cat ${epiname}.json | sed 's/.*"PhaseEncodingDirection": "\(.*\)".*/\1/;t;d')
		case $phenc in
			#AP
			"j-")
				pedir="-y"
			;;
			#PA
			"j")
				pedir="y"
			;;
		esac

		##########################################################################################
		#
		#	Fieldmap method
		#
		##########################################################################################

		if [ "$runfmap" -eq "0" ]; then
			printf "\n\tSkipping Fieldmap unwarping\n";
		else
			mkdir -m 777 $SUBDIR/func/sdc_fmp
			FMAPDIR=$SUBDIR/func/sdc_fmp
			printf "\n\tSaving fieldmap unwarped data to: $FMAPDIR\n"
			#Select 1st volume of EPI timeseries to reduce processing time
			#$FSLDIR/bin/fslroi ${epiimg} ${epivol} 30 1

			#Call epi_reg w/fieldmap est. (Single step)
			printf "\tRunning epi_reg\n\n"
			$FSLDIR/bin/epi_reg	--echospacing=${echosp} \
								--wmseg=${wmstruc} \
								--fmap=${fmap} \
								--fmapmag=${magimg} \
								--fmapmagbrain=${magbrain} \
								--pedir=${pedir} \
								--epi=${epivol} \
								--t1=${t1struc} \
								--t1brain=${bstruc} \
								--out=$FMAPDIR/${scanname};

			# #Calculate Jacobian coefficient of epi_reg warp to T1
			# $FSLDIR/bin/fnirtfileutils -i ${epiname}_fmap_epireg_warp \
			# 	-r ${t1struc} \
			# 	-f spline \
			# 	-o ${epiname}_fmap_epireg_warpcoeff;
			# $FSLDIR/bin/fnirtfileutils -i ${epiname}_fmap_epireg_warpcoeff \
			# 	-j ${epiname}_fmap_epireg_warpjac;

			printf "\n\tWarping EPI to T1\n"
			$FSLDIR/bin/applywarp	-i ${epiimg} \
									-r ${t1struc} \
									-w $FMAPDIR/${scanname}_warp.nii.gz \
									--interp=spline \
									-o $FMAPDIR/${scanname};
			$FSLDIR/bin/fslroi $FMAPDIR/${scanname} ${epiname}_fmap_checkwarpedtostruc 30 1
			printf "${epiname}_fmap_checkwarpedtostruc.nii.gz ${t1struc}\n" >> $QCDIR/qc_filelist_check2struct.txt

			##########################################################################################
			#
			#	EPI to MNI
			#
			##########################################################################################	
			#Warping 4D EPI in standard (2mm MNI) space
			printf "\tCreating EPI to MNI composite warps\n"
			$FSLDIR/bin/convertwarp	-r ${std} \
									--warp1=$FMAPDIR/${scanname}_warp \
									--warp2=$SUBDIR/$STR.anat/T1_to_MNI_nonlin_field.nii.gz \
									-j $FMAPDIR/${scanname}_jac2MNI.nii.gz \
									-o $FMAPDIR/${scanname}_warp2MNI.nii.gz;

			# printf "\tWarping EPI to MNI\n"
			# $FSLDIR/bin/applywarp	-i ${epiimg} \
			# 						-r ${std} \
			# 						-w $FMAPDIR/${scanname}_warp2MNI.nii.gz \
			# 						--interp=spline \
			# 						-o $FMAPDIR/${scanname}_wrp2std.nii.gz;
			# $FSLDIR/bin/fslroi $FMAPDIR/${scanname}_wrp2std ${epiname}_fmap_checkwarpedtostd 30 1

			printf "\tWarping EPI to MNI\n"
			$FSLDIR/bin/applywarp	-i ${epivol} \
									-r ${std} \
									-w $FMAPDIR/${scanname}_warp2MNI.nii.gz \
									--interp=spline \
									-o ${epiname}_fmap_checkwarpedtostd;
			#$FSLDIR/bin/fslroi $FMAPDIR/${scanname}_wrp2std ${epiname}_fmap_checkwarpedtostd 30 1

			printf "\tFieldmap SDC DONE.\n"
		fi
	
		##########################################################################################
		#
		#	AP/PA method
		#
		##########################################################################################

		if [ "$runtopup" -eq "0" ]; then
			printf "\n\tSkipping Topup unwarping\n";
		else
			mkdir -m 777 $SUBDIR/func/sdc_tup
			TUPDIR=$SUBDIR/func/sdc_tup
			printf "\n\tSaving TOPUP unwarped data to: $TUPDIR\n"
			#Extract core parameters from JSON
			acqmtxpe=$(cat ./${epiname}.json | sed 's/.*"AcquisitionMatrixPE": \(.*\),.*/\1/;t;d')
			totreadtime=`echo "scale=4;${echosp}*(${acqmtxpe}-1)" | bc -l`

			#Write config-file for topup
			par="$TUPDIR/${scanname}_blipudpars.par"
			case $phenc in
				#AP
				"j-")
					#pedir="-y"
					printf "0 -1 0 ${totreadtime}\n0 1 0 ${totreadtime}\n" >> ${par}
				;;
				#PA
				"j")
					#pedir="y"
					printf "0 1 0 ${totreadtime}\n0 -1 0 ${totreadtime}\n" >> ${par}
				;;
			esac

			printf "\tRunning topup\n"
			$FSLDIR/bin/topup	--imain=$SUBDIR/sdc/ep2d_topup_fieldmap.nii.gz \
								--datain=${par} \
								--config=${cnf} \
								--out=$TUPDIR/${scanname} \
								--iout=$TUPDIR/${scanname}_unw \
								--fout=$TUPDIR/${scanname}_field;
			#Hz to rad/s
			printf "\tConverting FMAP values: Hz -> rad/s\n"
			$FSLDIR/bin/fslmaths $TUPDIR/${scanname}_field -mul 6.2832 $TUPDIR/${scanname}_field_rads
		    $FSLDIR/bin/fslroi $TUPDIR/${scanname}_unw $TUPDIR/${scanname}_unw_SINGLEVOL 0 1
		    $FSLDIR/bin/bet	$TUPDIR/${scanname}_unw_SINGLEVOL $TUPDIR/${scanname}_unw_SINGLEVOL_brain \
		    				-f 0.4 \
		    				-g 0.1 \
		    				-R;
		    #Erode brain-extracted image to exclude noisy voxels
		    $FSLDIR/bin/fslmaths $TUPDIR/${scanname}_unw_SINGLEVOL_brain -ero $TUPDIR/${scanname}_unw_SINGLEVOL_brain_eroded

			printf "\tRunning epi_reg with topup fieldmap\n\n"
			$FSLDIR/bin/epi_reg	--epi=${epivol} \
								--t1=${t1struc} \
								--t1brain=${bstruc} \
								--wmseg=${wmstruc} \
								--fmap=$TUPDIR/${scanname}_field_rads \
								--fmapmag=$TUPDIR/${scanname}_unw_SINGLEVOL \
								--fmapmagbrain=$TUPDIR/${scanname}_unw_SINGLEVOL_brain_eroded \
								--echospacing=${echosp} \
								--pedir=${pedir} \
								--out=$TUPDIR/${scanname};

			# #Calculate Jacobian coefficient of epi_reg warp to T1
			# $FSLDIR/bin/fnirtfileutils -i ${epiname}_topup_epireg_warp \
			# 	-r ${t1struc} \
			# 	-f spline \
			# 	-o ${epiname}_topup_epireg_warpcoeff;
			# $FSLDIR/bin/fnirtfileutils -i ${epiname}_topup_epireg_warpcoeff \
			# 	-j ${epiname}_topup_epireg_warpjac;
				
			printf "\n\tWarping EPI to T1\n"
			$FSLDIR/bin/applywarp	-i ${epiimg} \
									-r ${t1struc} \
									-w $TUPDIR/${scanname}_warp.nii.gz \
									--interp=spline \
									-o $TUPDIR/${scanname};
			$FSLDIR/bin/fslroi $TUPDIR/${scanname} ${epiname}_tup_checkwarpedtostruc 30 1
			printf "${epiname}_tup_checkwarpedtostruc.nii.gz ${t1struc}\n" >> $QCDIR/qc_filelist_check2struct.txt

			##########################################################################################
			#
			#	EPI to MNI
			#
			##########################################################################################	
			printf "\tCreating EPI to MNI composite warps\n"
			$FSLDIR/bin/convertwarp	-r ${std} \
									--warp1=$TUPDIR/${scanname}_warp \
									--warp2=$SUBDIR/$STR.anat/T1_to_MNI_nonlin_field.nii.gz \
									-j $TUPDIR/${scanname}_jac2MNI.nii.gz \
									-o $TUPDIR/${scanname}_warp2MNI.nii.gz;

			# printf "\tWarping EPI to MNI\n"
			# $FSLDIR/bin/applywarp	-i ${epiimg} \
			# 						-r ${std} \
			# 						-w $TUPDIR/${scanname}_warp2MNI.nii.gz \
			# 						--interp=spline \
			# 						-o $TUPDIR/${scanname}_wrp2std.nii.gz;
			# $FSLDIR/bin/fslroi $TUPDIR/${scanname}_wrp2std ${epiname}_tup_checkwarpedtostd 30 1

			printf "\tWarping EPI to MNI\n"
			$FSLDIR/bin/applywarp	-i ${epivol} \
									-r ${std} \
									-w $TUPDIR/${scanname}_warp2MNI.nii.gz \
									--interp=spline \
									-o ${epiname}_tup_checkwarpedtostd;
			#$FSLDIR/bin/fslroi $TUPDIR/${scanname}_wrp2std ${epiname}_tup_checkwarpedtostd 30 1

			printf "\tTOPUP SDC DONE.\n"
		fi
		
		##########################################################################################
		#
		#	NO UNWARPING - Only T1 Registration
		#
		##########################################################################################

		#RAW (distorted) EPI to T1w
		mkdir -m 777 $SUBDIR/func/sdc_unc
		UNCDIR=$SUBDIR/func/sdc_unc
		printf "\n\tSaving SD UNCORRECTED data to: $UNCDIR\n\n"

		$FSLDIR/bin/epi_reg	--epi=${epivol} \
							--t1=${t1struc} \
							--t1brain=${bstruc} \
							--wmseg=${wmstruc} \
							--out=$UNCDIR/${scanname};

		# #Calculate Jacobian coefficient of epi_reg warp to T1
		# $FSLDIR/bin/fnirtfileutils -i ${epiname}_uncorr_epireg_warp \
		# 	-r ${t1struc} \
		# 	-f spline \
		# 	-o ${epiname}_uncorr_epireg_warpcoeff;
		# $FSLDIR/bin/fnirtfileutils -i ${epiname}_uncorr_epireg_warpcoeff \
		# 	-j ${epiname}_uncorr_epireg_warpjac;

		printf "\tRegistration of EPI to T1\n"
		$FSLDIR/bin/flirt	-in ${epiimg} \
							-ref ${t1struc} \
							-applyxfm \
							-init $UNCDIR/${scanname}.mat \
							-interp spline \
							-out $UNCDIR/${scanname};
		$FSLDIR/bin/fslroi $UNCDIR/${scanname} ${epiname}_unc_checkwarpedtostruc 30 1
		printf "${epiname}_unc_checkwarpedtostruc.nii.gz ${t1struc}\n" >> $QCDIR/qc_filelist_check2struct.txt

		##########################################################################################
		#
		#	EPI to MNI
		#
		##########################################################################################	
		printf "\tCreating EPI to MNI composite warps\n"
		$FSLDIR/bin/convertwarp	-r ${std} \
								--premat=$UNCDIR/${scanname}.mat \
								--warp2=$SUBDIR/$STR.anat/T1_to_MNI_nonlin_field.nii.gz \
								-j $UNCDIR/${scanname}_jac2MNI.nii.gz \
								-o $UNCDIR/${scanname}_warp2MNI.nii.gz;

		# printf "\tWarping EPI to MNI\n"
		# $FSLDIR/bin/applywarp	-i ${epiimg} \
		# 						-r ${std} \
		# 						-w $UNCDIR/${scanname}_warp2MNI.nii.gz \
		# 						--interp=spline \
		# 						-o $UNCDIR/${scanname}_wrp2std.nii.gz;
		# $FSLDIR/bin/fslroi $UNCDIR/${scanname}_wrp2std ${epiname}_unc_checkwarpedtostd 30 1

		printf "\tWarping EPI to MNI\n"
		$FSLDIR/bin/applywarp	-i ${epivol} \
								-r ${std} \
								-w $UNCDIR/${scanname}_warp2MNI.nii.gz \
								--interp=spline \
								-o ${epiname}_unc_checkwarpedtostd;
		#$FSLDIR/bin/fslroi $UNCDIR/${scanname}_wrp2std ${epiname}_unc_checkwarpedtostd 30 1


		printf "\tDONE.\n\n"

	done #for epiimg
done #for SUBDIR

#Prepare HTML report for struc and std registration of unwarped images
printf "\tCreating SDC report\n\n"
$FSLDIR/bin/slicesdir -o `cat $QCDIR/qc_filelist_check2struct.txt`
mv slicesdir $QCDIR/lnifmri_prep_func2struc_QC
printf "\n\n"
ls -d1 `pwd`/sub-*/func/*checkwarpedtostd.nii.gz >> $QCDIR/qc_filelist_check2std.txt
$FSLDIR/bin/slicesdir -p ${std} `cat $QCDIR/qc_filelist_check2std.txt`
mv slicesdir $QCDIR/lnifmri_prep_func2std_QC
printf "\n"

duration=$SECONDS
printf -v exectime "$(($duration / 60))m:$(($duration % 60))s."

NextStep
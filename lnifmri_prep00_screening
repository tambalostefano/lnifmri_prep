#!/bin/bash
#
# LNiF MRI Lab Pipeline for preprocessing of
# structural and functional MRI dataset
# stefano.tambalo@unitn.it - 20200310
#
# Screening of JSON files from functional EPI timeseries to list
# -   TR
# -   TE
# -   BW
# -   EchoSpacing
# -   Slice Num
# -   Fat Sat
# -   MB factor
# -   Volumes
# to identify possible inconsistencies
#
########################################################################

shopt -s extglob
Usage() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "\tFSLDIR not set!\n\n"
    printf "\tRequires:\n\t\tFSL (https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FSL)\n"
    printf "\n\n(c) stefano.tambalo@unitn.it, 2020.\n"
    printf "***************************************************\n\n"
    exit 1
}

Start() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Process functional data (m)\n"    

}

NextStep() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Complete. Exec. Time: ${exectime}\nNow run lnifmri_prep03_sdc"
    printf "\n\n***************************************************\n\n"
    exit 1
}

[ "$FSLDIR" = "" ] && Usage
exectime=0
SECONDS=0
QCDIR=`pwd`/qc

Start

for SUBDIR in sub-*[0-9] ; do
#cd ${subdir}
#echo $SUBDIR
    for epiimg in `$FSLDIR/bin/imglob $SUBDIR/func/lnifmri_prep_files/*ep2d_bold*[0-9]_+([0-9]).nii.gz` ; do

        epiname=`$FSLDIR/bin/remove_ext ${epiimg}`
        scanname=`basename ${epiimg}`

        printf "\tDataset: ${epiname}\n"

        #Extract core parameters from JSON
        TR=$(cat ${epiname}.json | sed 's/.*"RepetitionTime": \(.*\),.*/\1/;t;d')
        TE=$(cat ${epiname}.json | sed 's/.*"EchoTime": \(.*\),.*/\1/;t;d')
        BW=$(cat ${epiname}.json | sed 's/.*"PixelBandwidth": \(.*\),.*/\1/;t;d')
        ES=$(cat ${epiname}.json | sed 's/.*"DerivedVendorReportedEchoSpacing": \(.*\),.*/\1/;t;d')
        #NS=$(cat ${epiname}.json | sed 's/.*"RepetitionTime": \(.*\),.*/\1/;t;d')
        #NV=$(cat ${epiname}.json | sed 's/.*"RepetitionTime": \(.*\),.*/\1/;t;d')
        #FS=$(cat ${epiname}.json | sed 's/.*"RepetitionTime": \(.*\),.*/\1/;t;d')
        MB=$(cat ${epiname}.json | sed 's/.*"MultibandAccelerationFactor": \(.*\),.*/\1/;t;d')
        
        TRc=`cksum <<< ${TR} | cut -f 1 -d ' '`
        TEc=`cksum <<< ${TE} | cut -f 1 -d ' '`
        BWc=`cksum <<< ${BW} | cut -f 1 -d ' '`
        ESc=`cksum <<< ${ES} | cut -f 1 -d ' '`
        MBc=`cksum <<< ${MB} | cut -f 1 -d ' '`


        printf "${TRc}\t${TEc}\t${BWc}\t${ESc}\t${MBc}\n" >> ${QCDIR}/qc_screen_func.txt
        printf "1\n" >> ${QCDIR}/qc_screen_design.txt

    done #${epiname}
done #for .sub

printf "${TRc}\t0.032\t${BWc}\t${ESc}\t1\n" >> ${QCDIR}/qc_screen_func.txt
printf "1\n" >> ${QCDIR}/qc_screen_design.txt

$FSLDIR/bin/fsl_glm -i ${QCDIR}/qc_screen_func.txt \
                    -d ${QCDIR}/qc_screen_design.txt \
                    -o ${QCDIR}/qc_screen_out.txt \
                    --out_res=${QCDIR}/qc_screen_res.txt

awk '{ if (NR==1) { n = split($0, a, " "); } for (i=1; i<n; i++) { printf("%.15f\t", ($i/a[i])); } printf("%.15f\n", ($n/a[n])); }' ${QCDIR}/qc_screen_res.txt > ${QCDIR}/qc_screen_resnorm.txt

#Replace NaN values
sed -i 's/-nan/1/g' ${QCDIR}/qc_screen_resnorm.txt 

#Plot motion traces
$FSLDIR/bin/fsl_tsplot  -i ${QCDIR}/qc_screen_resnorm.txt \
                        -t 'func Parameter Inconsistencies' \
                        -a TR,TE,BW,ES,MB -u 1 -w 640 -h 144 \
                        --ymin=-3 --ymax=3 \
                        -o ${QCDIR}/lnifmri_prep_screenpars_func_QC.png;


duration=$SECONDS
printf -v exectime "$(($duration / 60))m:$(($duration % 60))s."
NextStep
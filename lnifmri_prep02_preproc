#!/bin/bash
#
# LNiF MRI Lab Pipeline for preprocessing of
# structural and functional MRI dataset
# stefano.tambalo@unitn.it - 20200310
#
# Preprocess functional EPI timeseries:
# -   Drop 10 volumes
# -   Grand Mean Scaling
# -   Realignment and estimation of motion parameters
# -   Detection of motion outliers for temporal masking
#
########################################################################
export LC_ALL=C

shopt -s extglob
Usage() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "\tFSLDIR not set!\n\n"
    printf "\tRequires:\n\t\tFSL (https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FSL)\n"
    printf "\n\n(c) stefano.tambalo@unitn.it, 2020.\n"
    printf "***************************************************\n\n"
    exit 1
}

Start() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Process functional data (motion correction)\n"    

}

NextStep() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Complete. Exec. Time: ${exectime}\nNow run lnifmri_prep03_sdc"
    printf "\n\n***************************************************\n\n"
    exit 1
}

[ "$FSLDIR" = "" ] && Usage
exectime=0
SECONDS=0

Start

for epiimg in `cat lnifmri_prep_inputlist.txt` ; do

    epiname=$($FSLDIR/bin/remove_ext ${epiimg})
    readarray -d / -t fileparts <<< "${epiimg}"
    nid=$((${#fileparts[@]}-1))
    sid=$((${#fileparts[@]}-3))
    nameID=$(echo ${fileparts[${nid}]})
    subID=$(echo ${fileparts[${sid}]})

    printf "\tDataset: %s - %s\n" "${subID}" "${nameID}"

    printf "\tReformat JSON file\n"
    cat ${epiname}.json | tr -d '\n' > ${epiname}_temp1.json
    sed 's/,\t"/,\n"/g' ${epiname}_temp1.json > ${epiname}_temp2.json
    cat ${epiname}_temp2.json | tr -d '\t' > ${epiname}_parameters.json

    #Store multiband slice timing extracted from JSON
    awk '$1 ~ /"SliceTiming"/ {print $2}' ${epiname}_parameters.json >> ${epiname}_temp_slicetiming.json
    cat ${epiname}_temp_slicetiming.json | tr ',[]' '\n' > ${epiname}_slicetiming.txt
 
    #Extract core parameters from JSON
    TR=$(awk '$1 ~ /"RepetitionTime"/ {print $2}' ${epiname}_parameters.json | tr -d ',')

    #Next steps are self-explanatory
    # printf "\tDiscarding first 10 vols\n"
    # $FSLDIR/bin/fslroi $epiimg $epiimg 0 100

    printf "\tSetting data type\n"
    $FSLDIR/bin/fslmaths $epiimg $epiimg -odt float 

    printf "\tGrand Mean scaling\n"
    $FSLDIR/bin/fslmaths $epiimg -ing 1000 $epiimg

    printf "\tSlice Timing correction\n"
    $FSLDIR/bin/slicetimer  -i $epiimg \
                            -o $epiimg \
                            --odd -r $TR \
                            --tcustom=${epiname}_slicetiming.txt;

    printf "\tMotion Correction\n"
    $FSLDIR/bin/mcflirt -in $epiimg \
                        -out ${epiname} \
                        -meanvol \
                        -mats -plots \
                        -rmsrel -rmsabs \
                        -spline_final;
    #Plot motion traces
    $FSLDIR/bin/fsl_tsplot  -i ${epiname}.par \
                            -t "${subID} estimated rotations (rad)" \
                            -u 1 --start=1 --finish=3 -a x,y,z -w 660 -h 220 \
                            --ymin=-0.01 --ymax=0.01 \
                            -o ${epiname}_rot.png;
    #Plot motion traces
    $FSLDIR/bin/fsl_tsplot  -i ${epiname}.par \
                            -t "${subID} estimated translations (mm)"\
                            --ymin=-1 --ymax=1 \
                            -u 1 --start=4 --finish=6 -a x,y,z -w 660 -h 220 \
                            -o ${epiname}_tra.png;

    printf "\tDetecting motion outliers\n\n"
    $FSLDIR/bin/fsl_motion_outliers -i $epiimg \
                                    -o ${epiname}_motout.txt \
                                    -s ${epiname}_motoutdvars.txt \
                                    --dvars --nomoco;
    #Plot motion outliers data
    if [ -f ${epiname}_motout.txt ] ; then
        # Sum and scale motout file to plot an overlay of DVARS and Temporal Mask            
        awk '{for(i=1; i<=NF; i++) x+=$i; x=x*100; print x; x=0}' ${epiname}_motout.txt > ${epiname}_motoutscaled.txt
        paste -d " " ${epiname}_motoutscaled.txt ${epiname}_motoutdvars.txt > ${epiname}_motoutplot.txt
        $FSLDIR/bin/fsl_tsplot  -i ${epiname}_motoutplot.txt \
                                -t "${subID} estimated motion outliers (dvars)" \
                                -a out,dvars -w 660 -h 220 \
                                --ymin=0 --ymax=100 \
                                -o ${epiname}_motout.png;
    else
        # plot only DVARS
        $FSLDIR/bin/fsl_tsplot  -i ${epiname}_motoutdvars.txt \
                                -t "${subID} estimated motion outliers (dvars)" \
                                -a dvars -w 660 -h 220 \
                                --ymin=0 --ymax=100 \
                                -o ${epiname}_motout.png;    
    fi

    printf "\tComplete.\n\n"
done #for .sub

duration=$SECONDS
printf -v exectime "$(($duration / 60))m:$(($duration % 60))s."
stamp=`date +%Y%m%d_%H%M%S`
printf "LNiF MRI Lab Preprocessing Pipeline\nDo not remove this file!\nCreated: ${stamp}" > .lnifmri_prep02_greenlight.txt
sleep 2

NextStep
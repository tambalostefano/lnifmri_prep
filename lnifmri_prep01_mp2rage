#!/bin/bash
#
# LNiF MRI Lab Pipeline for preprocessing of
# structural and functional MRI dataset
# stefano.tambalo@unitn.it - 20200310
#
# Preprocess MP2RAGE data
#
########################################################################
export LC_ALL=C

shopt -s extglob
Usage() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "\tFSLDIR not set!\n\n"
    printf "\tRequires:\n\t\tFSL (https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FSL)\n"
    printf "\n\n(c) stefano.tambalo@unitn.it, 2020.\n"
    printf "***************************************************\n\n"
    exit 1
}

Start() {
    stamp=`date +%Y%m%d_%H%M%S`
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Process MP2RAGE data\n"    

}

NextStep() {
    printf "\n***************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Complete. Exec. Time: ${exectime}"
    printf "\n\n***************************************************\n\n"
    exit 1
}

[ "$FSLDIR" = "" ] && Usage
exectime=0
SECONDS=0
LOGDIR=`pwd`/logs
stamp=`date +'%T'`

Start

if [ -s ${LOGDIR}/lnifmri_prep_mp2ragelist.txt ];
    then
        split -l 4 -d ${LOGDIR}/lnifmri_prep_mp2ragelist.txt ${LOGDIR}/mp2rage_chunk_
        for chk in `ls -d1 ${LOGDIR}/mp2rage_chunk_*`; do
            printf "\tFound T1w MP2RAGE dataset:\n"
            #Process MP2RAGE data to obtain a NOISE-ROBUST UNI image
            readarray -t mp2ragedata < ${chk}
            # printf "${mp2ragedata[*]}\n"
            
            ##################################################
            # Noise-control parameter
            # adapted from: doi:10.1371/journal.pone.0099676
            beta=50000
            Beta=$(echo "${beta}*2" | bc)
            ##################################################

            INV1=${mp2ragedata[0]%.nii.gz}
            INV2=${mp2ragedata[1]%.nii.gz}
            T1M=${mp2ragedata[2]%.nii.gz}
            UNI=${mp2ragedata[3]%.nii.gz}
            
            printf "\tComputing noise-robust UNIFORM image\n"
            $FSLDIR/bin/fslmaths ${INV1} -mul ${INV2} -sub ${beta} ${UNI}_robustnum
            $FSLDIR/bin/fslmaths ${INV1} -abs -sqr ${INV1}_sq
            $FSLDIR/bin/fslmaths ${INV2} -abs -sqr ${INV2}_sq
            $FSLDIR/bin/fslmaths ${INV1}_sq -add ${INV2}_sq -add ${Beta} ${UNI}_robustden
            $FSLDIR/bin/fslmaths ${UNI}_robustnum -div ${UNI}_robustden -add 0.5 ${UNI}_robustS
            $FSLDIR/bin/fslmaths ${UNI} -mul ${UNI}_robustS ${UNI}_robust
            anatimg=${UNI}_robust
            #Conventional anatomical processing
            subcount=0
            anatname=`$FSLDIR/bin/remove_ext $anatimg`
            readarray -d / -t fileparts <<< "${anatimg}"
            nid=$((${#fileparts[@]}-1))
            sid=$((${#fileparts[@]}-3))
            nameID=$(echo ${fileparts[${nid}]})
            subID=$(echo ${fileparts[${sid}]})
            #Resample struc to speed up processing time
            $FSLDIR/bin/fslmaths ${anatimg} -subsamp2 ${anatname}_lores
            
            type="T1";
            #Account for multiple strucural images: sub-XX_ses_YY
            printf -v LABEL "${subID}_ses-%02d_MP2RAGE $(( ++subcount ))"
            printf "\n\tProcessing ${type}w: ${subID} - ${nameID}\n\tStored in: ${LABEL}\n\n"        
            #Call fsl_anat script (see online FSL reference for detailed description of output)
            $FSLDIR/bin/fsl_anat    -o ./${subID}/${LABEL} \
                                    --nocrop \
                                    --noreorient \
                                    --nosubcortseg \
                                    -t ${type} \
                                    -i ${anatname}_lores;

            printf "\tGenerating tissue-specific masks\n"
            #Prepare WM mask
            $FSLDIR/bin/fslmaths    ./${subID}/${LABEL}.anat/${type}_fast_pve_2.nii.gz \
                                    -thr 0.5 \
                                    -bin ./${subID}/${LABEL}.anat/${type}_wmedge.nii.gz;
            
            #Prepare CSF msk            
            $FSLDIR/bin/fslmaths    ./${subID}/${LABEL}.anat/${type}_fast_pve_0.nii.gz \
                                    -thr 0.5 \
                                    -bin ./${subID}/${LABEL}.anat/${type}_csfedge.nii.gz;

            #Prepare GM mask
            $FSLDIR/bin/fslmaths    ./${subID}/${LABEL}.anat/${type}_fast_pve_1.nii.gz \
                                    -thr 0.5 \
                                    -bin ./${subID}/${LABEL}.anat/${type}_gmedge.nii.gz;

        done
    ls -d1 `pwd`/sub-*/*MP2RAGE.anat > ${LOGDIR}/lnifmri_prep_t1anatlist.txt

else

    printf "MP2RAGE input list is empty: nothing to process."

fi

duration=$SECONDS
printf -v exectime "$(($duration / 60))m:$(($duration % 60))s."
stamp=`date +%Y%m%d_%H%M%S`
printf "LNiF MRI Lab Preprocessing Pipeline\nDo not remove this file!\nCreated: ${stamp}" > ${LOGDIR}/lnifmri_prep01_greenlight.txt
sleep 2

NextStep
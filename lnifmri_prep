#!/bin/bash
#
# LNiF MRI Lab Pipeline for preprocessing of
# structural and functional MRI dataset
# stefano.tambalo@unitn.it - 20200310
#
########################################################################
export LC_ALL=C

shopt -s extglob
UsageFSL() {
    printf "**************************************************************\n"
    printf "**************************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "\tFSLDIR not set!\n\n"
    printf "\tRequires:\n\t\tFSL (https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FSL)\n"
    printf "\n\n(c) stefano.tambalo@unitn.it, 2020."
    printf "**************************************************************\n"
    printf "**************************************************************\n"
    exit 1
}

Setup() {
    printf "**************************************************************\n"
    printf "**************************************************************\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Pipeline setup\n\n"
}

# Start() {
#     clear
#     stamp=`date +'%T'`
#     printf "**************************************************************\n"
#     printf "**************************************************************\n"
#     printf "LNiF MRI Lab Preprocessing Pipeline\n"
#     printf "CIMeC - Center for Mind/Brain Science\n\n"
#     printf "Batch processing\t\t\tStarted\t [  %s ]\n" "${stamp}"
#     printf "\tOutput dir: ${DIRNAME}\n"
#     printf "\tLog dir: ${DIRNAME}/logs\n\n"
# }

Start() {
    clear
    stamp=`date +'%T'`
    printf "**************************************************************\n"
    printf "**************************************************************\n"
    printf "####################### TEST VERSION #########################\n"
    printf "\tSINGLE SUBJECT RUN (prep00)\n"
    printf "\tEPI VOLUMES LIMITED TO 100 (prep02)\n"
    printf "####################### TEST VERSION #########################\n\n"
    printf "LNiF MRI Lab Preprocessing Pipeline\n"
    printf "CIMeC - Center for Mind/Brain Science\n\n"
    printf "Batch processing\t\t\tStarted\t [  %s ]\n" "${stamp}"
    printf "\tOut dir: ${DIRNAME}\n"
    printf "\tLog dir: ${DIRNAME}/logs\n\n"
}

Progress() {
    printf "\tComplete [ ${laptime} ]\n"
}

Stop() {
    printf "\nFinished.\t\t\t\t Runtime [ ${exectime} ]\n"
    printf "\n(c) stefano.tambalo@unitn.it, 2020.\n"
    printf "**************************************************************\n"
    printf "**************************************************************\n\n"
    exit 1
}

[ "$FSLDIR" = "" ] && UsageFSL

Setup

default=`date +%Y%m%d_%H%M%S`
read -p "Enter directory output name [${default}]: " userinput
DIRNAME=${userinput:-${default}}
printf "\n\tOutput directory: %s\n\n" "$DIRNAME"

while true; do
    read -p "Run SS-ICA? (y/n) [y]: " answer

    case "$answer" in
        [yY]* )
            #printf "\n\t%s\n" 'Analysis: resting-state data'
            type="-${answer}"
            break;;
        [nN]* )
            #printf "\n\t%s\n" 'Analysis: task-based data (skip bptf)'
            type="-${answer}"
            break;;
        * )
            printf "\n%s\n" 'Answer either “y” or “n”.'
    esac
done

LOGDIR=`pwd`/${DIRNAME}/logs
SECONDS=0
elapsed=0
exectime=0
anat=""

#If DIRNAME exists add a timestamp
[ -d $DIRNAME ] && { DIRNAME=${default}_${DIRNAME}; printf "\n\t*** Directory exists ***\nOutput dir now set to: ${DIRNAME}"; }
#List all DCM directories of subjects data
ls -d1 `pwd`/* > dcmlist.txt
#Create output directory
mkdir -p $DIRNAME 
mkdir -p $LOGDIR
#This empty file marks an output directory
printf "LNiF MRI Lab Preprocessing Pipeline\nDo not remove this file!\nCreated: ${default}" >> ${DIRNAME}/lnifmri_prep_output.txt
sleep 2

Start
#These are calls to individual tools - lines are self-explanatory
printf "Creating directory structure\t"
$LNIFMRIDIR/lnifmri_prep00_organize -o ${DIRNAME} >> ${LOGDIR}/00_organize.txt
duration=$SECONDS
printf -v laptime "%04dm:%02ds" "$(($duration / 60))" "$(($duration % 60))"
elapsed=$(echo $elapsed + $duration | bc)
Progress

cd ./${DIRNAME}

SECONDS=0
printf "Processing structural data\t"
$LNIFMRIDIR/lnifmri_prep01_anat >> ${LOGDIR}/01_structural.txt
duration=$SECONDS
printf -v laptime "%04dm:%02ds" "$(($duration / 60))" "$(($duration % 60))"
elapsed=$(echo $elapsed + $duration | bc)
Progress

SECONDS=0
printf "Processing functional data\n\tMotion correction\t"
$LNIFMRIDIR/lnifmri_prep02_preproc >> ${LOGDIR}/02_motioncorr.txt
duration=$SECONDS
printf -v laptime "%04dm:%02ds" "$(($duration / 60))" "$(($duration % 60))"
elapsed=$(echo $elapsed + $duration | bc)
Progress

SECONDS=0
printf "\tSuscept. dist. correction"
$LNIFMRIDIR/lnifmri_prep03_sdc >> ${LOGDIR}/03_suscdistcorr.txt
duration=$SECONDS
printf -v laptime "%04dm:%02ds" "$(($duration / 60))" "$(($duration % 60))"
elapsed=$(echo $elapsed + $duration | bc)
Progress

SECONDS=0
printf "\tNuis. regr. and BP filter"
$LNIFMRIDIR/lnifmri_prep04_filter ${type} >> ${LOGDIR}/04_nuisancefilter.txt
duration=$SECONDS
printf -v laptime "%04dm:%02ds" "$(($duration / 60))" "$(($duration % 60))"
elapsed=$(echo $elapsed + $duration | bc)
Progress

SECONDS=0
printf "Creating QC report\t\t"
$LNIFMRIDIR/lnifmri_prep05_qc >> ${LOGDIR}/05_qcreport.txt
duration=$SECONDS
printf -v laptime "%04dm:%02ds" "$(($duration / 60))" "$(($duration % 60))"
elapsed=$(echo $elapsed + $duration | bc)
Progress

printf -v exectime "%04dm:%02ds" "$(($elapsed / 60))" "$(($elapsed % 60))"
Stop


